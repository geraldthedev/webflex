{"ast":null,"code":"import _classCallCheck from \"/workspace/webflex/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _possibleConstructorReturn from \"/workspace/webflex/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/workspace/webflex/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/workspace/webflex/node_modules/@babel/runtime/helpers/esm/inherits\";\nimport React from 'react';\n\nvar express = require('express'),\n    app = express(),\n    port = 8080,\n    bodyParser = require('body-parser'),\n    MongoClient = require('mongodb').MongoClient,\n    uri = \"mongodb://hakeem1106:Megan1106@testclust-shard-00-00-w12h6.mongodb.net:27017,testclust-shard-00-01-w12h6.mongodb.net:27017,testclust-shard-00-02-w12h6.mongodb.net:27017/test?ssl=true&replicaSet=TestClust-shard-0&authSource=admin&retryWrites=true\",\n    client = new MongoClient(uri, {\n  useNewUrlParser: true\n});\n\nvar Conact =\n/*#__PURE__*/\nfunction (_React$Component) {\n  _inherits(Conact, _React$Component);\n\n  function Conact() {\n    var _getPrototypeOf2;\n\n    var _this;\n\n    _classCallCheck(this, Conact);\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    _this = _possibleConstructorReturn(this, (_getPrototypeOf2 = _getPrototypeOf(Conact)).call.apply(_getPrototypeOf2, [this].concat(args)));\n\n    _this.nowConn = function () {\n      return client.connect(function (err) {\n        console.log(\"db connected\");\n      });\n    };\n\n    return _this;\n  }\n\n  return Conact;\n}(React.Component);\n/*let nameSave = new mongoose.Schema({\n    name: String\n});\n*/\n\n\nexport { Conact as default };\napp.get(\"/\", function (req, res) {\n  res.send(\"Hello World\");\n});\napp.listen(port, function () {\n  console.log(\"Server listening on port \" + port);\n});","map":{"version":3,"sources":["/workspace/webflex/src/app.js"],"names":["React","express","require","app","port","bodyParser","MongoClient","uri","client","useNewUrlParser","Conact","nowConn","connect","err","console","log","Component","get","req","res","send","listen"],"mappings":";;;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;;AAEA,IAAMC,OAAO,GAAGC,OAAO,CAAC,SAAD,CAAvB;AAAA,IACAC,GAAG,GAAGF,OAAO,EADb;AAAA,IAEMG,IAAI,GAAG,IAFb;AAAA,IAGMC,UAAU,GAAGH,OAAO,CAAC,aAAD,CAH1B;AAAA,IAIMI,WAAW,GAAGJ,OAAO,CAAC,SAAD,CAAP,CAAmBI,WAJvC;AAAA,IAKMC,GAAG,GAAG,uPALZ;AAAA,IAMMC,MAAM,GAAG,IAAIF,WAAJ,CAAgBC,GAAhB,EAAqB;AAAEE,EAAAA,eAAe,EAAE;AAAnB,CAArB,CANf;;IASqBC,M;;;;;;;;;;;;;;;;;;UACpBC,O,GAAQ;AAAA,aAAKH,MAAM,CAACI,OAAP,CAAe,UAAAC,GAAG,EAAI;AAClCC,QAAAA,OAAO,CAACC,GAAR,CAAY,cAAZ;AACD,OAFa,CAAL;AAAA,K;;;;;;EAD2Bf,KAAK,CAACgB,S;AAO1C;;;;;;SAPqBN,M;AAYrBP,GAAG,CAACc,GAAJ,CAAQ,GAAR,EAAa,UAACC,GAAD,EAAMC,GAAN,EAAc;AAC1BA,EAAAA,GAAG,CAACC,IAAJ,CAAS,aAAT;AACA,CAFD;AAIAjB,GAAG,CAACkB,MAAJ,CAAWjB,IAAX,EAAiB,YAAM;AACtBU,EAAAA,OAAO,CAACC,GAAR,CAAY,8BAA8BX,IAA1C;AACA,CAFD","sourcesContent":["import React from 'react'\n\nconst express = require('express'),\napp = express(),\n      port = 8080,\n      bodyParser = require('body-parser'),\n      MongoClient = require('mongodb').MongoClient,\n      uri = \"mongodb://hakeem1106:Megan1106@testclust-shard-00-00-w12h6.mongodb.net:27017,testclust-shard-00-01-w12h6.mongodb.net:27017,testclust-shard-00-02-w12h6.mongodb.net:27017/test?ssl=true&replicaSet=TestClust-shard-0&authSource=admin&retryWrites=true\",\n      client = new MongoClient(uri, { useNewUrlParser: true });\n\n\nexport default class Conact extends React.Component{\n nowConn=()=> client.connect(err => {\n  console.log(\"db connected\")\n});\n}\n\n\n/*let nameSave = new mongoose.Schema({\n    name: String\n});\n*/\n\napp.get(\"/\", (req, res) => {\n res.send(\"Hello World\");\n});\n\napp.listen(port, () => {\n console.log(\"Server listening on port \" + port);\n});"]},"metadata":{},"sourceType":"module"}
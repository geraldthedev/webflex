{"ast":null,"code":"app = express(), port = 8080, bodyParser = require('body-parser'), MongoClient = require('mongodb').MongoClient, uri = \"mongodb://hakeem1106:Megan1106@testclust-shard-00-00-w12h6.mongodb.net:27017,testclust-shard-00-01-w12h6.mongodb.net:27017,testclust-shard-00-02-w12h6.mongodb.net:27017/test?ssl=true&replicaSet=TestClust-shard-0&authSource=admin&retryWrites=true\", client = new MongoClient(uri, {\n  useNewUrlParser: true\n});\nexport default nowConn = function nowConn() {\n  return client.connect(function (err) {\n    console.log(\"db connected\");\n  });\n};\n/*let nameSave = new mongoose.Schema({\n    name: String\n});\n*/\n\napp.get(\"/\", function (req, res) {\n  res.send(\"Hello World\");\n});\napp.listen(port, function () {\n  console.log(\"Server listening on port \" + port);\n});","map":{"version":3,"sources":["/workspace/webflex/src/app.js"],"names":["app","express","port","bodyParser","require","MongoClient","uri","client","useNewUrlParser","nowConn","connect","err","console","log","get","req","res","send","listen"],"mappings":"AAAMA,GAAG,GAAGC,OAAO,EAAb,EACAC,IAAI,GAAG,IADP,EAEAC,UAAU,GAAGC,OAAO,CAAC,aAAD,CAFpB,EAGAC,WAAW,GAAGD,OAAO,CAAC,SAAD,CAAP,CAAmBC,WAHjC,EAIAC,GAAG,GAAG,uPAJN,EAKAC,MAAM,GAAG,IAAIF,WAAJ,CAAgBC,GAAhB,EAAqB;AAAEE,EAAAA,eAAe,EAAE;AAAnB,CAArB,CALT;AAQN,eAAeC,OAAO,GAAC;AAAA,SAAKF,MAAM,CAACG,OAAP,CAAe,UAAAC,GAAG,EAAI;AAChDC,IAAAA,OAAO,CAACC,GAAR,CAAY,cAAZ;AACD,GAF2B,CAAL;AAAA,CAAvB;AAKA;;;;;AAKAb,GAAG,CAACc,GAAJ,CAAQ,GAAR,EAAa,UAACC,GAAD,EAAMC,GAAN,EAAc;AAC1BA,EAAAA,GAAG,CAACC,IAAJ,CAAS,aAAT;AACA,CAFD;AAIAjB,GAAG,CAACkB,MAAJ,CAAWhB,IAAX,EAAiB,YAAM;AACtBU,EAAAA,OAAO,CAACC,GAAR,CAAY,8BAA8BX,IAA1C;AACA,CAFD","sourcesContent":["      app = express(),\n      port = 8080,\n      bodyParser = require('body-parser'),\n      MongoClient = require('mongodb').MongoClient,\n      uri = \"mongodb://hakeem1106:Megan1106@testclust-shard-00-00-w12h6.mongodb.net:27017,testclust-shard-00-01-w12h6.mongodb.net:27017,testclust-shard-00-02-w12h6.mongodb.net:27017/test?ssl=true&replicaSet=TestClust-shard-0&authSource=admin&retryWrites=true\",\n      client = new MongoClient(uri, { useNewUrlParser: true });\n\n\nexport default nowConn=()=> client.connect(err => {\n  console.log(\"db connected\")\n});\n\n\n/*let nameSave = new mongoose.Schema({\n    name: String\n});\n*/\n\napp.get(\"/\", (req, res) => {\n res.send(\"Hello World\");\n});\n\napp.listen(port, () => {\n console.log(\"Server listening on port \" + port);\n});"]},"metadata":{},"sourceType":"module"}